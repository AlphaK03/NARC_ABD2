-- ===================================================================
-- BK SCHEMA (DIRECTORY + TABLAS + ÍNDICES + FK + PERMISOS BÁSICOS)
-- Proyecto: backup-app (Opción A - Lean MVC)
-- ===================================================================

-- 1) DIRECTORY donde se escribirán los .rman y logs
--    Ajusta la ruta física a tu entorno (usuario del SO de Oracle debe tener permisos).
--    Ejemplo para Linux: '/u01/backups/app'  |  Windows: 'C:\oracle\rman_app'
CREATE OR REPLACE DIRECTORY RMAN_DIR AS '/u01/backups/app';
-- Otorga permisos al esquema de aplicación (reemplazar APPUSER por tu usuario)
-- GRANT READ, WRITE ON DIRECTORY RMAN_DIR TO APPUSER;

-- 2) Tablas del catálogo
CREATE TABLE BK_STRATEGY (
  strategy_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  client_name       VARCHAR2(128) NOT NULL,
  db_alias          VARCHAR2(64)  NOT NULL,
  name_code         VARCHAR2(128) NOT NULL,  -- ej: rmadb0101.rma
  backup_type       VARCHAR2(20)  NOT NULL,  -- FULL | PARCIAL | INCREMENTAL | INCOMPLETO
  include_ctlfile   CHAR(1)       DEFAULT 'N' CHECK (include_ctlfile IN ('S','N')),
  include_logfile   CHAR(1)       DEFAULT 'N' CHECK (include_logfile IN ('S','N')),
  created_at        TIMESTAMP     DEFAULT SYSTIMESTAMP,
  CONSTRAINT uk_strategy_alias_name UNIQUE (db_alias, name_code)
);

CREATE TABLE BK_STRATEGY_OBJECT (
  strategy_obj_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  strategy_id       NUMBER NOT NULL,
  tablespace_name   VARCHAR2(30),
  datafile_path     VARCHAR2(512),
  size_mb           NUMBER,
  selected          CHAR(1) DEFAULT 'S' CHECK (selected IN ('S','N')),
  CONSTRAINT fk_obj_strategy FOREIGN KEY (strategy_id)
    REFERENCES BK_STRATEGY(strategy_id) ON DELETE CASCADE
);

CREATE TABLE BK_SCHEDULE (
  schedule_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  strategy_id       NUMBER NOT NULL,
  freq              VARCHAR2(20)  NOT NULL,   -- DAILY|WEEKLY|MONTHLY|ONCE
  start_time        TIMESTAMP      NOT NULL,
  byday             VARCHAR2(50),             -- MON,TUE,... (solo para WEEKLY)
  byhour            VARCHAR2(50),             -- "2" o "2,14"
  byminute          VARCHAR2(50),             -- "0" o "0,30"
  enabled           CHAR(1) DEFAULT 'S' CHECK (enabled IN ('S','N')),
  CONSTRAINT fk_sched_strategy FOREIGN KEY (strategy_id)
    REFERENCES BK_STRATEGY(strategy_id) ON DELETE CASCADE
);

CREATE TABLE BK_LOG (
  log_id            NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  strategy_id       NUMBER NOT NULL,
  run_id            VARCHAR2(64),             -- DBMS_SCHEDULER run_id (cuando aplique)
  started_at        TIMESTAMP,
  finished_at       TIMESTAMP,
  status            VARCHAR2(20),             -- SUCCESS|FAILED|WARNING|SUBMITTED
  message           CLOB,
  created_at        TIMESTAMP DEFAULT SYSTIMESTAMP,
  CONSTRAINT fk_log_strategy FOREIGN KEY (strategy_id)
    REFERENCES BK_STRATEGY(strategy_id)
);

-- 3) Índices útiles
CREATE INDEX ix_sched_strategy ON BK_SCHEDULE(strategy_id);
CREATE INDEX ix_log_strategy   ON BK_LOG(strategy_id);

-- 4) Vistas “descubrimiento” (opcionales si prefieres control fino de GRANTs)
--    Puedes comentar/usar según permisos del usuario.
-- CREATE OR REPLACE VIEW BK_V_TABLESPACES AS
--   SELECT tablespace_name FROM dba_tablespaces ORDER BY tablespace_name;
-- CREATE OR REPLACE VIEW BK_V_DATAFILES AS
--   SELECT file_name AS datafile_path, tablespace_name, bytes/1024/1024 AS size_mb
--   FROM dba_data_files ORDER BY tablespace_name, file_name;

-- 5) Grants mínimos (ajusta el usuario)
-- GRANT SELECT, INSERT, UPDATE, DELETE ON BK_STRATEGY        TO APPUSER;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON BK_STRATEGY_OBJECT TO APPUSER;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON BK_SCHEDULE        TO APPUSER;
-- GRANT SELECT, INSERT, UPDATE, DELETE ON BK_LOG             TO APPUSER;
-- GRANT EXECUTE ON DBMS_SCHEDULER TO APPUSER;
